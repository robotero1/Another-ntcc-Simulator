%% Programa de ntcc: Automata. Adapatacion del ejemplo 30b,
%% basado, a su vez en una adaptacion del ejemplo 4 presentado
%% en "Models and Emerging Trends of Concurrent Constraint Programming"
%% por Carlos Olarte, Camilo Rueda y Frank D. Valencia, Springer Verlag,
%% 2013. Suponga ahora que, por cada unidad de tiempo, un automata se
%% mueve una celda en la direccion indicada cada vez que recibe una
%% senal del ambiente que le indica cuando y hacia donde debe girar.
%% Asi pues, la variable 'turn', que puede tomar los valores  0, 1
%% o 2, determina si el automata tiene que girar a la derecha (turn=1),
%% a la izquierda (turn=2) o no girar (turn=0). Suponga tambien que
%% el automata puede girar o no de acuerdo con alguna regla de transicion
%% interna no-determinista, quedando en una de las posibles direcciones
%% dada por la variable 'dir'. Si dir=1, la direccion correspondiente es
%% Norte; cuando dir=2, es Este; cuando dir=3, Sur y para dir=4, Oeste (W).
%% Corra el siguiente codigo varias veces y observe los resultados en
%% cada ocasion.
NtccSim
begin
declare turn dir domain = [0#2 1#4] tsim = 17
in
robot = bang (
	      par (
		   when (turn > 0) do
			 sum ( when (turn == 1) do
				     sum ( when (dir == 1) do
						 next ( tell (dir = 2))
	      				   when (dir == 2) do
						 next ( tell (dir = 3))
	      				   when (dir == 3) do
						 next ( tell (dir = 4))
	      				   when (dir == 4) do
						 next ( tell (dir = 1)))
			       when (turn == 2) do
				     sum ( when (dir == 1) do
						 next ( tell (dir = 4))
	      				   when (dir == 4) do
						 next ( tell (dir = 3))
	      				   when (dir == 3) do
						 next ( tell (dir = 2))
	      				   when (dir == 2) do
						 next ( tell (dir = 1))))
		   when (turn == 0) do
			 sum ( when (dir == 1) do next ( tell (dir = 1))
			       when (dir == 2) do next ( tell (dir = 2))
			       when (dir == 3) do next ( tell (dir = 3))
	      		       when (dir == 4) do next ( tell (dir = 4)))
		   sum ( when ( true ) do next ( tell (turn = 0))
	      		 when ( true ) do next ( tell (turn = 1))
	      		 when ( true ) do next ( tell (turn = 2)))));
%% Condiciones iniciales:
tell (dir = 1);
tell (turn = 1);
robot
end
