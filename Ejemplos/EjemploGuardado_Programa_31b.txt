%% Programa de ntcc: Controlador de un semaforo vial.
%% Este es una adaptacion del ejemplo 4 presentado en "Models
%% and Emerging Trends of Concurrent Constraint Programming" por Carlos,
%% Olarte, Camilo Rueda y Frank D. Valencia, Springer Verlag, 2013.
%% En este ejemplo se modela el controlador de un semaforo. Suponga
%% que dicho controlador recibe senales del ambiente que le indican
%% cuando cambiar su estado. Por un lado esta la variable 'state' que
%% corresponde a los colores del semaforo, si state=1, entonces el
%% semaforo esta en rojo; si state=2, el semaforo esta en amarillo
%% y si state=3, en verde. Por otro lado, la variable 'change' es la
%% que determina cuando el semaforo debe cambiar de color, si change=0,
%% el semaforo permanece igual y si change=1 el semaforo cambia de color.
%% Por ultimo, la variable 'time', definida en el intervalo [1, 9],
%% permite llevar la cuenta de las unidades de tiempo en cada estado.
%% Corra el siguiente codigo y observe los resultados.
NtccSim
begin
declare state change time domain = [1#3 0#1 0#9] tsim = 30
in
sem = bang (
	    par (
		 when (change == 1) do
		       sum ( when (state == 1) do next ( tell (state = 2))
	      		     when (state == 2) do next ( tell (state = 3))
	      		     when (state == 3) do next ( tell (state = 1)))
		 when (change == 0) do
		       sum ( when (state == 1) do next ( tell (state = 1))
			     when (state == 2) do next ( tell (state = 2))
			     when (state == 3) do next ( tell (state = 3)))
		 sum ( when (time == 0) do next ( tell (time = 1))
	      	       when (time == 1) do next ( tell (time = 2))
	      	       when (time == 2) do next ( tell (time = 3))
	      	       when (time == 3) do next ( tell (time = 4))
	      	       when (time == 4) do next ( tell (time = 5))
	      	       when (time == 5) do next ( tell (time = 6))
	      	       when (time == 6) do next ( tell (time = 7))
	      	       when (time == 7) do next ( tell (time = 8))
	      	       when (time == 8) do next ( tell (time = 9))
	      	       when (time == 9) do next ( tell (time = 0)))
		 sum ( when (time < 3) do next ( tell (change = 0))
	      	       when (time == 3) do next ( tell (change = 1))
	      	       when (time == 4) do next ( tell (change = 0))
	      	       when (time == 5) do next ( tell (change = 1))
	      	       when (time == 6) do next ( tell (change = 0))
	      	       when (time == 7) do next ( tell (change = 0))
	      	       when (time == 8) do next ( tell (change = 1))
	      	       when (time > 8) do next ( tell (change = 0)))));
%% Condiciones iniciales:
tell (state = 1);
tell (change = 0);
tell (time = 0);
sem
end
